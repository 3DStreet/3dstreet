@use '../../style/variables.scss';

.aiChatToggle {
  position: fixed;
  left: 0;
  top: 76px; /* Position it above the layers panel toggle */
  z-index: 9; /* Lower z-index to be below modals */

  button {
    width: 52px; /* Default width with only icon visible */
    overflow: hidden;
    transition: none;
    padding: 18px 14px; /* Adjusted padding to keep icon centered */
    border-radius: 0 12px 12px 0; /* No rounded corners on left, larger radius on right */
    height: 60px;

    /* Special styling for ArrowLeftIcon to keep it small */
    svg[viewBox='0 0 8 13'] {
      width: 10px; /* 1/4 of the standard 24px icon size */
      height: 14px; /* Maintain aspect ratio */
      translate: 4px 0px;
    }

    span {
      position: absolute;
      left: 55px; /* Position text to appear after icon */
      opacity: 0;
      white-space: nowrap;
      pointer-events: none; /* Prevent text from interfering with hover */
    }

    /* Expand width and show text on hover only when toggle is closed */
    &:hover {
      width: 160px; /* Increased width to provide more space */

      span {
        opacity: 1;
      }
    }
  }

  /* When toggle is open, don't expand width and don't show text on hover */
  &.isOpen button:hover {
    width: 52px !important; /* Keep the default width when open */

    span {
      opacity: 0 !important; /* Keep text hidden */
    }
  }
}

.chatContainer {
  position: fixed;
  left: 0;
  top: 76px;
  z-index: 8; /* Lower z-index to be below modals */
  width: 450px;
  overflow-y: auto;
  background-color: rgba(40, 40, 40, 0.9);
  border-radius: 0 8px 8px 0; /* Rounded only on the right corners */
  border: 1px solid variables.$gray-200;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);

  .chat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 18px 15px; /* Match the toggle button padding */
    border-bottom: 1px solid variables.$gray-700;

    .chat-title {
      font-weight: 500; /* Match the toggle text weight */
      color: variables.$white;
      font-size: 20px; /* Match the toggle text size */
      margin-left: 39px; /* Match the positioning of the text in the toggle (55px - 16px padding) */
    }

    .chat-actions {
      display: flex;
      gap: 8px;

      .reset-button {
        background: none;
        border: none;
        cursor: pointer;
        color: variables.$gray-400;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 4px;
        border-radius: 4px;
        // transition: all 0.2s ease;

        &:hover {
          color: variables.$white;
          background-color: rgba(255, 255, 255, 0.1);
        }

        &:disabled {
          opacity: 0.5;
          cursor: not-allowed;
        }
      }
    }
  }

  .chat-messages {
    padding: 10px 15px;
    height: 300px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .chatInput {
    display: flex;
    padding: 10px 15px;
    border-top: 1px solid variables.$gray-700;

    input {
      flex: 1;
      background-color: rgba(255, 255, 255, 0.1);
      border: 1px solid variables.$gray-600;
      border-radius: 4px;
      padding: 8px 12px;
      color: variables.$white;
      margin-right: 8px;

      &::placeholder {
        color: variables.$gray-400;
      }

      &:focus {
        outline: none;
        border-color: variables.$purple-500;
      }

      &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        background-color: rgba(255, 255, 255, 0.05);
      }
    }

    button {
      background-color: variables.$purple-500;
      color: variables.$white;
      border: none;
      border-radius: 4px;
      padding: 8px 16px;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        background-color: variables.$purple-600;
      }

      &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }
    }
  }
}

.markdownContent {
  position: relative; // This is needed for the absolute positioned footer
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 1em;
    margin-bottom: 0.5em;
    font-weight: bold;
  }

  h1 {
    font-size: 1.8em;
  }
  h2 {
    font-size: 1.5em;
  }
  h3 {
    font-size: 1.3em;
  }
  h4 {
    font-size: 1.2em;
  }

  ul,
  ol {
    padding-left: 1.5em;
    margin: 0.5em 0;
  }

  li {
    margin: 0.25em 0;
  }

  p {
    margin: 0.5em 0;
  }

  strong {
    font-weight: bold;
  }

  em {
    font-style: italic;
  }

  code {
    background-color: rgba(0, 0, 0, 0.1);
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-family: monospace;
  }

  pre {
    background-color: rgba(0, 0, 0, 0.1);
    padding: 1em;
    border-radius: 5px;
    overflow-x: auto;

    code {
      background-color: transparent;
      padding: 0;
    }
  }

  blockquote {
    border-left: 4px solid #ccc;
    padding-left: 1em;
    margin: 0.5em 0;
    color: #666;
  }

  table {
    border-collapse: collapse;
    margin: 1em 0;

    th,
    td {
      border: 1px solid #ccc;
      padding: 0.5em;
    }

    th {
      background-color: rgba(0, 0, 0, 0.05);
    }
  }

  .markdownFooter {
    position: absolute;
    bottom: 8px;
    right: 8px;
    opacity: 0;
    transition: opacity 0.2s ease;

    :global(.copy-button) {
      font-size: 0.8em;
      padding: 2px 6px;
      display: flex;
      align-items: center;
      gap: 4px;
      background-color: rgba(0, 0, 0, 0.05);
      border: 1px solid rgba(0, 0, 0, 0.1);
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.2s ease;

      &:hover {
        background-color: rgba(0, 0, 0, 0.1);
      }

      svg {
        width: 14px;
        height: 14px;
      }
    }
  }

  &:hover {
    .markdownFooter {
      opacity: 1;
    }
  }
}

.proFeaturesWrapper {
  position: relative;

  .proOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(2px);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
    cursor: pointer;
    transition: background-color 0.2s ease;

    &:hover {
      background: rgba(0, 0, 0, 0.4);
    }

    &:active {
      background: rgba(0, 0, 0, 0.3);
    }

    .proOverlayContent {
      display: flex;
      align-items: center;
      gap: 8px;
      background: rgba(119, 77, 238, 0.9);
      transition: all 0.2s ease;
      padding: 8px 16px;
      border-radius: 8px;
      color: white;
      font-weight: 500;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

      &:hover {
        background: rgba(119, 77, 238, 1);
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }

      &:active {
        background: rgba(107, 69, 214, 1);
        transform: translateY(0);
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
      }

      span[role='img'] {
        font-size: 16px;
      }
    }
  }
}

/* Snapshot component styles */
.snapshotContainer {
  margin: 10px 0;
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: 8px;
  padding: 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.snapshotCaption {
  font-weight: 500;
  margin-bottom: 8px;
  color: #cccccc;
  text-align: center;
}

.snapshotImageWrapper {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-top: 4px;
  position: relative;
}

.snapshotImage {
  max-width: 100%;
  max-height: 400px;
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.snapshotActions {
  position: absolute;
  bottom: 8px;
  right: 8px;
  display: flex;
  gap: 8px;
  opacity: 0;
}

.resetButton {
  margin-left: 8px;
  padding: 4px;
  background: none;
  border: none;
  cursor: pointer;
  opacity: 0.6;
  transition: opacity 0.2s ease;

  &:hover {
    opacity: 1;

    svg path {
      stroke: #ff4444;
    }
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;

    &:hover svg path {
      stroke: inherit;
    }
  }
}

.snapshotButton {
  background: rgba(0, 0, 0, 0.5);
  border: none;
  border-radius: 4px;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s ease;
  padding: 0;

  svg {
    width: 20px;
    height: 20px;
  }

  &:hover {
    background: rgba(0, 0, 0, 0.7);
  }
}

.snapshotImageWrapper:hover .snapshotActions {
  opacity: 1;
}

.resetConfirmModal {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
}

.resetConfirmContent {
  background-color: variables.$darkgray-800;
  padding: 20px;
  border-radius: 8px;
  width: 90%;
  max-width: 400px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);

  p {
    margin: 10px 0 30px 0;
    color: variables.$white;
    text-align: center;
    font-size: 18px !important;
  }

  .resetConfirmButtons {
    display: flex;
    justify-content: center;
    gap: 12px;

    button {
      padding: 8px 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-weight: 500;
      font-size: 18px !important;

      &:first-child {
        background-color: #dc3545;
        color: variables.$white;

        &:hover {
          background-color: #bd2130;
        }
      }

      &:last-child {
        background-color: variables.$darkgray-600;
        color: variables.$white;

        &:hover {
          background-color: variables.$darkgray-500;
        }
      }
    }
  }
}
